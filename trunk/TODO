*. (+) Привести в порядок всю кодовую базу 
*. (-) Рефакторинг всех тестов 
*. (+) Внедрить шаблон станицы каркаса веб-приложения
*. Внедрить систему скриптовой загрузки css таблиц
*. (+) Внедрить скрипты dwr & mootools
*. (+) Протестировать отправку стандартных сообщений на сервер
*. Проверить функциональность словаря данных
*. (+) Внедрить поддержку сессий
*. Внедрить поддержку i18n
*. Создать административную панель
	*. Создать главу статистика
	*. Создать главу статистика cassandra
	*. Создать главу статистика messages collector
	*. Cоздать главу управление пользователями
	*. Создать главу управления ролями
	*. Создать личный кобинет пользователя в системе
*. Создать отдельный статичный класс для генерации Java скриптов
*. Создать тесты наследующими основные свойства (_log, _accessor, _descriptor...)
*. Убрать ненужные данные из обратного сообщения от сервера
*. Создать классы управления множествоем приложений на одном сервере
	*. Создать bean класс SessionManager для управления данными сессий
	*. Данные о сессии должны прикрепляться ко входящему сообщению
	
=== Cassandra ===
*. (+) Создать раздел статистики данных по серверу
    *. (+) Создеть раздел в виде html
*. (+)Создать раздел статистики данный по keyspace-ам
    *. (+) Создать раздел в виде html с сылками на keyspace-ы
*. (Сделано )Создать пул объектов-клиентов для доступа к серверу
*. Создать точную фильстацию столбцов в зависимости от типа колонны!!!   
    
=== Описание видов сообщений MessageBean
*. Запросы MessageBean получают данные от сервера в текстовом виде.
	*. Запросы MessageBean бывают таких типов:
		*. html.context - запрос на содержание html тега от сервера
	*. Ответы от сервера в виде MessageBean бывают таких типов:
		*. html.context   - ответ на содержание html тега от сервера
		*. errror.message - ответ-ошибка на выполнение запроса
		
==== Features 
* user-space - Add SWIFT messages checker
* admin-space - Users management
* admin-space

==== Связи с объектами
*. Описание пути доступа - access path - описание пути для доступа к интересующему объекту(объектам)
	*. Примеры:
		1. "KSMainTEST.Users"                           - all super columns
		2. "KSMainTEST.Users.userID"                    - super column
		3. "KSMainTEST.Users.userID.Articles"           - all linked super columns
		4. "KSMainTEST.Users.userID.Articles.articleID" - all linked super columns
==== Опеределение операций с каждым из видов описаний доступа:
FMD  
	Find(Check)
	Mutate(Insert/Update)
	Delete(Remove)
*. Создать тесты для FMD подхода
	*. (+) KSP___CF,			
	*. (+) KSP___CF___ID	
	*. (+) KSP___CF___ID___LINKNAME
	*. KSP___CF___ID___LINKNAME__LINKID 

==== Определение тегов ===
1. Теги иерархичны
2. Сушествуют начальные теги, так же "называются нулевые"
3. Нулевые теги	не имеют предков
4. Не "нулевые теги" должны иметь предка
5. Не "нулевые теги" могут иметь множество дочерних элементов
6. Нельзя удалить тег у которого есть хотя бы один дочерний элемент
7. Теги могу быть закриплены к любим элементам базы данных группируя их по определениям тега
8. Теги должны иметь названия и носит в себе смысловую нагрузку тега, например:
	- "html"
	- "js"
	- "css"
	- "users"
	- "roles"
	- "locale"
	- "uzb"
	- "rus"
	- "eng"